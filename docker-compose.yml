version: "3.2"



networks:

   frontend:

   backend:



services:

   catalog:

      image: shoes/catalog

      build:

         context: ProductCatalogApi

         dockerfile: Dockerfile

      environment:

         - DatabaseServer=mssqlserver

         - DatabaseName=CatalogDb

         - DatabaseUser=sa

         - DatabaseUserPassword=ProductApi(!)

      container_name: catalogapi

      ports:

         - "5000:80"

      networks:

         - backend

         - frontend

      depends_on:

         - mssqlserver
         
   cart:
      
      image: shoes/cart

      build:

         context: CartApi

         dockerfile: Dockerfile

      environment:

         - ASPNETCORE_ENVIRONMENT=Development 

      container_name: cartapi

      ports:

         - "5500:80"

      networks:

         - backend

         - frontend

      depends_on:

         - basket.data


   order:
      
      image: shoes/order

      build:

         context: OrderApi

         dockerfile: Dockerfile

      environment:

         - ASPNETCORE_ENVIRONMENT=Development 

      container_name: orderapi

      ports:

         - "5200:80"

      networks:

         - backend

         - frontend


   mssqlserver:

      image: "microsoft/mssql-server-linux:latest"

      ports:

         - "1445:1433"

      container_name: mssqlcontainer

      environment:

         - ACCEPT_EULA=Y

         - SA_PASSWORD=ProductApi(!)

      networks:

         - backend


   basket.data:

      image: redis

      ports:

         - "6377:6379"

      container_name: redisdb

      networks:

         - backend
